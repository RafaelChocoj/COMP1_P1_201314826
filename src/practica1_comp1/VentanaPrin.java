/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1_comp1;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import java.io.*;

/**
 *
 * @author RAFAEL
 */
public class VentanaPrin extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrin
     */
    File rutas_ar;
    
    JFileChooser dialog = new JFileChooser();
    FileInputStream entrada;
    FileOutputStream salida;
    File archivo;
    public VentanaPrin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrolpan = new javax.swing.JScrollPane();
        jtxtarea1 = new javax.swing.JTextArea();
        n_analizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        m_abrir = new javax.swing.JMenuItem();
        m_save = new javax.swing.JMenuItem();
        m_saveas = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtxtarea1.setColumns(20);
        jtxtarea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtxtarea1.setRows(5);
        scrolpan.setViewportView(jtxtarea1);

        n_analizar.setText("Analizar Entrada");
        n_analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n_analizarActionPerformed(evt);
            }
        });

        jMenu2.setText("Archivo");

        m_abrir.setText("Abrir");
        m_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_abrirActionPerformed(evt);
            }
        });
        jMenu2.add(m_abrir);

        m_save.setText("Guardar");
        m_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_saveActionPerformed(evt);
            }
        });
        jMenu2.add(m_save);

        m_saveas.setText("Guardar como...");
        m_saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_saveasActionPerformed(evt);
            }
        });
        jMenu2.add(m_saveas);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(n_analizar)
                    .addComponent(scrolpan, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(scrolpan, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(n_analizar)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_abrirActionPerformed
        if(dialog.showDialog(null, "Abrir docuemnto")== JFileChooser.APPROVE_OPTION)
        {
            boolean ya = false;
            archivo = dialog.getSelectedFile();
            if(archivo.canRead() )
            {
////                JOptionPane.showMessageDialog(null, "archivo: " + archivo);
                 /*verificando si ya tiene abierto el arhicvo*/
                 
//                 for (int i = 0; i < rutas_ar.size(); i++) {
//                    JOptionPane.showMessageDialog(null,  "rutas_ar **: " + rutas_ar );
//                    if (archivo.equals(rutas_ar.get(i).getArhivo()) )
                    if (archivo.equals(rutas_ar))
                    {
                        JOptionPane.showMessageDialog(null,  "El documento " + archivo.getName() + " ya esta abierto" );
                        ya = true;
                    }
//                }
                 /*fin*/
                 
                if(ya == false){
                 
                if(archivo.getName().endsWith("er") )
                {
                    //JOptionPane.showMessageDialog(null,  archivo.getName() );
                    String contenido = AbrirArhivo(archivo);
                    jtxtarea1.setText(contenido);
                    rutas_ar = archivo;
                    this.setTitle(archivo.getName());
//                    InsertaPesta(contenido, archivo.getName());
                    
                    //errores.add(new Error(token.getLexema(), "Error Sintáctico", "Se esperaba el simbolo '[' y se encontró "
                    //            + token.getLexema(), token.getFila(), token.getColumna()));
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Extencion incorrecta");
                } 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "No puede abrir archivo");
            }           
        }
    }//GEN-LAST:event_m_abrirActionPerformed

    private void m_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_saveActionPerformed

        if (rutas_ar == null)
        {
            JOptionPane.showMessageDialog(null, "Hoy hay ningun archivo");
        }
            else
        {
////            JOptionPane.showMessageDialog(null, rutas_ar);
        
//        if(dialog.showDialog(null, "Guardar Arhivo") == JFileChooser.APPROVE_OPTION )
//        {
            String ruta;
            //archivo = dialog.getSelectedFile();
            archivo = rutas_ar;
            
            ruta = archivo.toString();
            //ruta = ruta + ".dat";
            archivo = new File(ruta);
//            JOptionPane.showMessageDialog(null, archivo);
            
            GuardarAhora(archivo);     
        }
    }//GEN-LAST:event_m_saveActionPerformed

    private void m_saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_saveasActionPerformed
//        if (indice_actual < 0 )
//        {
//            JOptionPane.showMessageDialog(null, "Hoy hay ningun archivo");
//        }
//            else
//        {
           
        if(dialog.showDialog(null, "Guardar Arhivo") == JFileChooser.APPROVE_OPTION )
        {
            String ruta;
            archivo = dialog.getSelectedFile();
            ruta = archivo.toString();
            ruta = ruta + ".er";
            archivo = new File(ruta);
            //JOptionPane.showMessageDialog(null, archivo);
            
            GuardarAhora(archivo);
            
            rutas_ar = archivo;
            this.setTitle(archivo.getName());
        }
//        }
    }//GEN-LAST:event_m_saveasActionPerformed

    private void n_analizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n_analizarActionPerformed
       String texto = jtxtarea1.getText();
       //JOptionPane.showMessageDialog(null, texto);
       
       Lexico analisis_lex =  new Lexico();
       analisis_lex.Analizador_cadena(texto);
       
       analisis_lex.ImprimeTokens();
       System.err.println("------------------------" );
       Sintactico sin = new Sintactico();
       sin.Parsear(analisis_lex.lis_tokens);
       
       JOptionPane.showMessageDialog(null,"termino el sintatico");
       sin.Imprime_var();
       
       sin.Imprime_ER();
       
    }//GEN-LAST:event_n_analizarActionPerformed

    public void GuardarAhora(File archivo_g)
    {
        //if (archivo_g.getName().endsWith("dat"))
          //  {
                String doc = jtxtarea1.getText();
                //JOptionPane.showMessageDialog(null, doc);      
                
                boolean pasa = GuardarArchivo(archivo_g, doc);
                
                if (pasa == false)                
                {
                    JOptionPane.showMessageDialog(null, "error al guardar achivo");
                }
                JOptionPane.showMessageDialog(null, "archivo guardado");
            //}
        
    }
    
    public boolean GuardarArchivo(File arhivo, String documento)
    {
        boolean pasa = true;
        try {
            salida = new FileOutputStream(arhivo);
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt);
            //arhivo_actual = arhivo;
            
        } catch (Exception e) {
            pasa = false;
        }
         return pasa;   
    }
    
    public String AbrirArhivo(File archivo)
    {
        String document = "";
        try {
//            entrada = new FileInputStream(archivo);
//            int ascci;
//            while ((ascci= entrada.read()) != -1 ) { 
//                char letr = (char)ascci;
//                document = document + letr;
//                   
//            }

            String cadena;
            FileReader f = new FileReader(archivo);
            BufferedReader b = new BufferedReader(f);
            while((cadena = b.readLine())!=null) {
                //System.out.println(cadena);
                document = document + cadena + '\n';
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        return document;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextArea jtxtarea1;
    private javax.swing.JMenuItem m_abrir;
    private javax.swing.JMenuItem m_save;
    private javax.swing.JMenuItem m_saveas;
    private javax.swing.JButton n_analizar;
    private javax.swing.JScrollPane scrolpan;
    // End of variables declaration//GEN-END:variables
}
